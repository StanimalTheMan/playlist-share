{"version":3,"sources":["graphql/mutations.js","components/AddSong.js","components/Header.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","DELETE_SONG","useStyles","makeStyles","theme","container","display","alignItems","urlInput","margin","spacing","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","title","artist","AddSong","classes","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","event","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","variables","length","console","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","className","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","color","variant","placeholder","type","InputProps","startAdornment","InputAdornment","position","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","marginLeft","Header","AppBar","Toolbar","HeadsetTwoTone","Typography","component","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectFit","height","Song","id","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","deleteSong","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","input","__typename","log","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","Save","Delete","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","QueuedSongList","queue","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","seconds","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThanSm","greaterThanMd","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","ReactDOM","render","ApolloProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f1a8bbe6.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n  mutation addOrRemoveFromQueue($input: SongInput!) {\n    addOrRemoveFromQueue(input: $input) @client\n  }\n`;\n\nexport const ADD_SONG = gql`\n  mutation addSong(\n    $title: String!\n    $artist: String!\n    $thumbnail: String!\n    $duration: Float!\n    $url: String!\n  ) {\n    insert_songs(\n      objects: {\n        title: $title\n        artist: $artist\n        thumbnail: $thumbnail\n        duration: $duration\n        url: $url\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const DELETE_SONG = gql`\n  mutation deleteSong($id: uuid!) {\n    delete_songs(where: { id: { _eq: $id } }) {\n      returning {\n        id\n        thumbnail\n        artist\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport {\n  TextField,\n  InputAdornment,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Link, AddBoxOutlined } from \"@material-ui/icons\";\nimport ReactPlayer from \"react-player\";\nimport SoundcloudPlayer from \"react-player/lib/players/SoundCloud\";\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_SONG } from \"../graphql/mutations\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  urlInput: {\n    margin: theme.spacing(1),\n  },\n  addSongButton: {\n    margin: theme.spacing(1),\n  },\n  dialog: {\n    textAlign: \"center\",\n  },\n  thumbnail: {\n    width: \"90%\",\n  },\n}));\n\nconst DEFAULT_SONG = {\n  duration: 0,\n  title: \"\",\n  artist: \"\",\n  thumbnail: \"\",\n};\n\nfunction AddSong() {\n  const classes = useStyles();\n  const [addSong, { error }] = useMutation(ADD_SONG);\n  const [url, setUrl] = React.useState(\"\");\n  const [playable, setPlayable] = React.useState(false);\n  const [dialog, setDialog] = React.useState(false);\n  const [song, setSong] = React.useState(DEFAULT_SONG);\n\n  React.useEffect(() => {\n    const isPlayable =\n      SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\n    setPlayable(isPlayable);\n  }, [url]);\n\n  function handleChangeSong(event) {\n    const { name, value } = event.target;\n    setSong((prevSong) => ({\n      ...prevSong,\n      [name]: value,\n    }));\n  }\n\n  function handleCloseDialog() {\n    setDialog(false);\n  }\n\n  async function handleEditSong({ player }) {\n    const nestedPlayer = player.player.player;\n    let songData;\n    if (nestedPlayer.getVideoData) {\n      songData = getYoutubeInfo(nestedPlayer);\n    } else if (nestedPlayer.getCurrentSound) {\n      songData = await getSoundcloudInfo(nestedPlayer);\n    }\n    setSong({ ...songData, url });\n  }\n\n  async function handleAddSong() {\n    try {\n      const { url, thumbnail, duration, title, artist } = song;\n      // addSong({ variables: { ...song } });\n      await addSong({\n        variables: {\n          url: url.length > 0 ? url : null,\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\n          duration: duration > 0 ? duration : null,\n          title: title.length > 0 ? title : null,\n          artist: artist.length > 0 ? artist : null,\n        },\n      });\n      handleCloseDialog();\n      setSong(DEFAULT_SONG);\n      setUrl(\"\");\n    } catch (error) {\n      console.error(\"Error adding song\", error);\n    }\n  }\n\n  function getYoutubeInfo(player) {\n    const duration = player.getDuration();\n    const { title, video_id, author } = player.getVideoData();\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n    return {\n      duration,\n      title,\n      artist: author,\n      thumbnail,\n    };\n  }\n\n  function getSoundcloudInfo(player) {\n    return new Promise((resolve) => {\n      player.getCurrentSound((songData) => {\n        if (songData) {\n          resolve({\n            duration: Number(songData.duration / 1000),\n            title: songData.title,\n            artist: songData.user.username,\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\"),\n          });\n        }\n      });\n    });\n  }\n\n  function handleError(field) {\n    return error?.graphQLErrors[0]?.extensions?.path.includes(field);\n  }\n\n  const { thumbnail, title, artist } = song;\n  return (\n    <div className={classes.container}>\n      <Dialog\n        className={classes.dialog}\n        open={dialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle>Edit Song</DialogTitle>\n        <DialogContent>\n          <img\n            src={thumbnail}\n            alt=\"Song thumbnail\"\n            className={classes.thumbnail}\n          />\n          <TextField\n            value={title}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            error={handleError(\"title\")}\n            helperText={handleError(\"title\") && \"Fill out field\"}\n          />\n          <TextField\n            value={artist}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"artist\"\n            label=\"Artist\"\n            fullWidth\n            error={handleError(\"artist\")}\n            helperText={handleError(\"artist\") && \"Fill out field\"}\n          />\n          <TextField\n            value={thumbnail}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"thumbnail\"\n            label=\"Thumbnail\"\n            fullWidth\n            error={handleError(\"thumbnail\")}\n            helperText={handleError(\"thumbnail\") && \"Fill out field\"}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">\n            Add Song\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TextField\n        className={classes.urlInput}\n        onChange={(event) => setUrl(event.target.value)}\n        value={url}\n        placeholder=\"Add Youtube or Soundcloud Url\"\n        fullWidth\n        margin=\"normal\"\n        type=\"url\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Link />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button\n        disabled={!playable}\n        className={classes.addSongButton}\n        onClick={() => setDialog(true)}\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<AddBoxOutlined />}\n      >\n        Add\n      </Button>\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\n    </div>\n  );\n}\n\nexport default AddSong;\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\nimport { HeadsetTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\">\n      <Toolbar>\n        <HeadsetTwoTone />\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n          Playlist Share\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_SONGS = gql`\n  subscription getSongs {\n    songs(order_by: { created_at: desc }) {\n      artist\n      duration\n      id\n      thumbnail\n      title\n      url\n    }\n  }\n`;\n","import React from \"react\";\nimport {\n  CircularProgress,\n  Typography,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Delete, Pause, PlayArrow, Save } from \"@material-ui/icons\";\nimport { useMutation, useSubscription } from \"@apollo/client\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport { SongContext } from \"../App\";\nimport { ADD_OR_REMOVE_FROM_QUEUE, DELETE_SONG } from \"../graphql/mutations\";\n\nfunction SongList() {\n  const { data, loading, error } = useSubscription(GET_SONGS);\n\n  // const song = {\n  //   title: \"I Remember You\",\n  //   artist: \"Dear Cloud\",\n  //   thumbnail: \"https://i.ytimg.com/vi/ahjnQmBWLdk/maxresdefault.jpg\",\n  // };\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: 50,\n        }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n  if (error) return <div>Error fetching songs</div>;\n\n  return (\n    <div>\n      {data.songs.map((song) => (\n        <Song key={song.id} song={song} />\n      ))}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(3),\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140,\n  },\n}));\n\nfunction Song({ song }) {\n  const { id } = song;\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: (data) => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    },\n  });\n  const [deleteSong] = useMutation(DELETE_SONG);\n  const { state, dispatch } = React.useContext(SongContext);\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const { title, artist, thumbnail } = song;\n\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n  }, [id, state.song.id, state.isPlaying]);\n\n  function handleTogglePlay() {\n    dispatch({ type: \"SET_SONG\", payload: { song } });\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } },\n    });\n  }\n\n  async function handleDeleteSong() {\n    try {\n      await deleteSong({\n        variables: { id: song.id },\n      });\n      await addOrRemoveFromQueue({\n        variables: { input: { ...song, __typename: \"Song\" } },\n      });\n    } catch (error) {\n      console.log(\"Error deleting song\", error);\n    }\n  }\n\n  return (\n    <Card className={classes.container}>\n      <div className={classes.songInfoContainer}>\n        <CardMedia image={thumbnail} className={classes.thumbnail} />\n        <div className={classes.songInfo}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n              {artist}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\n            </IconButton>\n            <IconButton\n              onClick={handleAddOrRemoveFromQueue}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              <Save />\n            </IconButton>\n            <IconButton onClick={handleDeleteSong}>\n              <Delete color=\"error\" />\n            </IconButton>\n          </CardActions>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default SongList;\n","import React from \"react\";\nimport {\n  Avatar,\n  IconButton,\n  makeStyles,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\nfunction QueuedSongList({ queue }) {\n  // console.log({ queue });\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n\n  // const song = {\n  //   title: \"I Remember You\",\n  //   artist: \"Dear Cloud\",\n  //   thumbnail: \"https://i.ytimg.com/vi/ahjnQmBWLdk/maxresdefault.jpg\",\n  // };\n\n  return (\n    greaterThanMd && (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"textSecondary\" variant=\"button\">\n          QUEUE ({queue.length})\n        </Typography>\n        {queue.map((song, i) => (\n          <QueuedSong key={i} song={song} />\n        ))}\n      </div>\n    )\n  );\n}\n\nconst useStyles = makeStyles({\n  avatar: {\n    width: 44,\n    height: 44,\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n  },\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n});\n\nfunction QueuedSong({ song }) {\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: (data) => {\n      console.log(data);\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    },\n  });\n  const { thumbnail, artist, title } = song;\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } },\n    });\n  }\n\n  return (\n    <div className={classes.container}>\n      <Avatar src={thumbnail} alt=\"Song thumbnail\" className={classes.avatar} />\n      <div className={classes.songInfoContainer}>\n        <Typography variant=\"subtitle2\" className={classes.text}>\n          {title}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n          className={classes.text}\n        >\n          {artist}\n        </Typography>\n      </div>\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\n        <Delete color=\"error\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default QueuedSongList;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_QUEUED_SONGS = gql`\n  query getQueuedSongs {\n    queue @client {\n      id\n      duration\n      title\n      artist\n      thumbnail\n      url\n    }\n  }\n`;\n","import React from \"react\";\nimport QueuedSongList from \"./QueuedSongList\";\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  IconButton,\n  makeStyles,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport { Pause, PlayArrow, SkipNext, SkipPrevious } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  thumbnail: {\n    width: 150,\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nfunction SongPlayer() {\n  const { data } = useQuery(GET_QUEUED_SONGS);\n  const reactPlayerRef = React.useRef();\n  const { state, dispatch } = React.useContext(SongContext);\n  const [played, setPlayed] = React.useState(0);\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n  const [seeking, setSeeking] = React.useState(false);\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const songIndex = data.queue.findIndex((song) => song.id === state.song.id);\n    setPositionInQueue(songIndex);\n  }, [data.queue, state.song.id]);\n\n  React.useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0);\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }, [data.queue, played, dispatch, positionInQueue]);\n\n  function handleTogglePlay() {\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleProgressChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (nextSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }\n\n  function handlePlayPrevSong() {\n    const prevSong = data.queue[positionInQueue - 1];\n    if (prevSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\n    }\n  }\n\n  return (\n    <>\n      <Card variant=\"outlined\" className={classes.container}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton onClick={handlePlayPrevSong}>\n              <SkipPrevious />\n            </IconButton>\n            <IconButton onClick={handleTogglePlay}>\n              {state.isPlaying ? (\n                <Pause className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton onClick={handlePlayNextSong}>\n              <SkipNext />\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}\n            </Typography>\n          </div>\n          <Slider\n            onMouseDown={handleSeekMouseDown}\n            onMouseUp={handleSeekMouseUp}\n            onChange={handleProgressChange}\n            value={played}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played);\n              setPlayedSeconds(playedSeconds);\n            }\n          }}\n          url={state.song.url}\n          playing={state.isPlaying}\n          hidden\n        />\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\n      </Card>\n      <QueuedSongList queue={data.queue} />\n    </>\n  );\n}\n\nexport default SongPlayer;\n","function songReducer(state, action) {\n  switch (action.type) {\n    case \"PLAY_SONG\": {\n      return {\n        ...state,\n        isPlaying: true,\n      };\n    }\n    case \"PAUSE_SONG\": {\n      return {\n        ...state,\n        isPlaying: false,\n      };\n    }\n    case \"SET_SONG\": {\n      return {\n        ...state,\n        song: action.payload.song,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default songReducer;\n","import React from \"react\";\nimport AddSong from \"./components/AddSong\";\nimport Header from \"./components/Header\";\nimport SongList from \"./components/SongList\";\nimport SongPlayer from \"./components/SongPlayer\";\nimport { Grid, useMediaQuery, Hidden } from \"@material-ui/core\";\nimport songReducer from \"./reducer\";\n\nexport const SongContext = React.createContext({\n  song: {\n    id: \"641b3969-f86d-4013-b9c3-6bb8512cc4c4\",\n    title: \"Battle Belongs\",\n    artist: \"Phil Wickham\",\n    thumbnail: \"http://img.youtube.com/vi/qtvQNzPHn-w/0.jpg\",\n    url: \"https://www.youtube.com/watch?v=qtvQNzPHn-w\",\n    duration: 286,\n  },\n  isPlaying: false,\n});\n\nfunction App() {\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n  const greaterThanSm = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n  // const { data } = useQuery(GET_QUEUED_SONGS);\n  // console.log(data.queue);\n  // useEffect(() => {\n  //   console.log(data.queue[0]);\n  //   dispatch({ type: \"SET_SONG\", payload: { song: data.queue[0] } });\n  // }, [dispatch, data.queue]);\n\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n      {/* {greaterThanSm && <Header />} */}\n      <Grid container spacing={3}>\n        <Grid\n          style={{\n            paddingTop: greaterThanSm ? 80 : 10,\n          }}\n          item\n          xs={12}\n          md={7}\n        >\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid\n          style={\n            greaterThanMd\n              ? { position: \"fixed\", width: \"100%\", right: 0, top: 70 }\n              : { position: \"fixed\", width: \"100%\", left: 0, bottom: 0 }\n          }\n          item\n          xs={12}\n          md={5}\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createTheme } from \"@material-ui/core/styles\";\nimport { teal, purple } from \"@material-ui/core/colors\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n    primary: teal,\n    secondary: purple,\n  },\n});\n\nexport default theme;\n","import { ApolloClient, gql, InMemoryCache } from \"@apollo/client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { GET_QUEUED_SONGS } from \"./queries\";\n\nconst client = new ApolloClient({\n  link: new WebSocketLink({\n    uri: \"ws://playlist-share-app.herokuapp.com/v1/graphql\",\n    options: {\n      reconnect: true,\n    },\n  }),\n  cache: new InMemoryCache(),\n  typeDefs: gql`\n    type Song {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n\n    input SongInput {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n\n    type Query {\n      queue: [Song]!\n    }\n\n    type Mutation {\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\n    }\n  `,\n  resolvers: {\n    Mutation: {\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\n        const queryResult = cache.readQuery({\n          query: GET_QUEUED_SONGS,\n        });\n        if (queryResult) {\n          const { queue } = queryResult;\n          const isInQueue = queue.some((song) => song.id === input.id);\n          const newQueue = isInQueue\n            ? queue.filter((song) => song.id !== input.id)\n            : [...queue, input];\n          cache.writeQuery({\n            query: GET_QUEUED_SONGS,\n            data: { queue: newQueue },\n          });\n          return newQueue;\n        }\n        return [];\n      },\n    },\n  },\n});\n\nconst hasQueue = Boolean(localStorage.getItem(\"queue\"));\n\nconst data = {\n  queue: hasQueue ? JSON.parse(localStorage.getItem(\"queue\")) : [],\n};\n// const client = new ApolloClient({\n//   uri: \"https://playlist-share-app.herokuapp.com/v1/graphql\",\n//   cache: new InMemoryCache()\n// });\nclient.writeQuery({\n  query: GET_QUEUED_SONGS,\n  data,\n});\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { CssBaseline, MuiThemeProvider } from \"@material-ui/core\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport theme from \"./theme\";\nimport client from \"./graphql/client\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}